<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hugo on Ahri Love</title>
    <link>https://javabullshit.github.io/tags/hugo/</link>
    <description>Recent content in hugo on Ahri Love</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Mar 2022 10:50:27 +0000</lastBuildDate><atom:link href="https://javabullshit.github.io/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo笔记</title>
      <link>https://javabullshit.github.io/posts/hugo/</link>
      <pubDate>Wed, 02 Mar 2022 10:50:27 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/hugo/</guid>
      <description>文档 https://gohugo.io/documentation/
评论插件的选择 几个不错的评论插件:
 Valine: 传统的昵称、邮箱、网址式 utterances: 配github登录评，论置起来最简单 gitalk: github登录评论，美观 disqus: 老外用的多，有收费功能  人生苦短，我用utterances  在github上创建一个公开的repository 在github上安装uterances app：https://github.com/apps/utterances，安装时选择刚才创建的repository 进入官网，填入刚才的repository，然后复制下面的代码填到hugo模板里的相对应位置，一般在是post.html里面找  进入官网，
页内超链接新标签页打开 需要修改主题文件夹中的3个文件
 head.html post.html page.html  在&amp;lt;body&amp;gt;之前加入javascript代码：
&amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt; 	function addaTarget(id) { 	var aTags = document.getElementById(id).getElementsByTagName(&amp;#34;a&amp;#34;); 	for (i = 0; i &amp;lt; aTags.length; i++) { 	var aTags_item = aTags[i]; 	aTags_item.target = &amp;#34;_blank&amp;#34;;  } } &amp;lt;/script&amp;gt; 在文章页和独立页的html文件中找到{{ .Content }}，并在把它包裹住的&amp;lt;div&amp;gt;加入一个名为post-content-id的id,通常是这样：
&amp;lt;div class=&amp;#34;post-content&amp;#34; id=&amp;#34;post-content-id&amp;#34;&amp;gt;  {{ .</description>
    </item>
    
    <item>
      <title>Git常用</title>
      <link>https://javabullshit.github.io/posts/git/</link>
      <pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/git/</guid>
      <description>初始化 # 以当前目录为项目创建仓库 git init  # 创建一个目录作为项目仓库 git init [name] 提交至暂存区 git add [file] git commit -m [msg] 分支 # 创建分支 git branch [name]  # 查看分支，-r：远程分支，-a：所有分支 git branch 参数  # 切换分支 git checkout 分支名 同步 # 添加远程仓库 git remote add [仓库] [仓库url]  # 同步 git push [仓库] [分支]  # 同步到本地 git pull [仓库] [分支] 其他 加上--global表示全局，不加就仅针对当前项目
# 合并分支 git branch -M/m [name]  # 缓存账号密码 git config --global credential.</description>
    </item>
    
  </channel>
</rss>
