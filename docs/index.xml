<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>编程笔记本</title>
    <link>https://javabullshit.github.io/</link>
    <description>Recent content on 编程笔记本</description>
    <image>
      <url>https://javabullshit.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://javabullshit.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 16 Mar 2022 06:52:22 +0000</lastBuildDate><atom:link href="https://javabullshit.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>制定类：更多的魔法方法</title>
      <link>https://javabullshit.github.io/posts/magic-methods/</link>
      <pubDate>Wed, 16 Mar 2022 06:52:22 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/magic-methods/</guid>
      <description>官方文档： https://docs.python.org/3/reference/datamodel.html#special-method-names 中文： https://docs.python.org/zh-cn/3/reference/datamodel.html#special-method-names</description>
    </item>
    
    <item>
      <title>把类当成方法使用</title>
      <link>https://javabullshit.github.io/posts/use-class-ass-a-method/</link>
      <pubDate>Wed, 16 Mar 2022 06:43:43 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/use-class-ass-a-method/</guid>
      <description>class people():  def __init__(self,name):  self.name=name  def __call__(self):  print(&amp;#34;my name is {0.name}&amp;#34;.format(self))  me=people(&amp;#34;john&amp;#34;) me() output:
my name is john </description>
    </item>
    
    <item>
      <title>给类的实例绑定方法</title>
      <link>https://javabullshit.github.io/posts/binding-method-for-instance/</link>
      <pubDate>Tue, 15 Mar 2022 07:47:50 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/binding-method-for-instance/</guid>
      <description>from types import MethodType  class people():  def __init__(self):  print(&amp;#34;cls&amp;#34;)  def eat(self,shit):  print(&amp;#34;I&amp;#39;m eating &amp;#34;+shit)  def say(self,shit):  print(shit)  you=people() me=people()  # 仅给单个实例绑定方法 you.eat=MethodType(eat,you) you.eat(&amp;#34;shit&amp;#34;)  # 给所有实例绑定方法 people.say=MethodType(say,people) you.say(&amp;#34;f**k.&amp;#34;) me.say(&amp;#34;f**k you!&amp;#34;) output:
cls cls I&amp;#39;m eating shit f**k. f**k you! </description>
    </item>
    
    <item>
      <title>重✍️线程构造方法</title>
      <link>https://javabullshit.github.io/posts/rewrite-methods-in-threading/</link>
      <pubDate>Mon, 14 Mar 2022 14:00:45 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/rewrite-methods-in-threading/</guid>
      <description>继承于threading，重写构造方法：
import threading  class th(threading.Thread):  def __init__(self):  threading.Thread.__init__(self)  print(&amp;#34;__init__&amp;#34;)   def run(self): 	print(&amp;#34;run&amp;#34;)  t=th() t.start() t.join() output:
__init__ run </description>
    </item>
    
    <item>
      <title>线程🔒</title>
      <link>https://javabullshit.github.io/posts/threading-lock/</link>
      <pubDate>Mon, 14 Mar 2022 13:55:39 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/threading-lock/</guid>
      <description>import threading import time  lock=threading.Lock()  def p(s):  lock.acquire()  for i in range(0,3):  print(s)  time.sleep(1)  lock.release()  t1=threading.Thread(target=p,args=(&amp;#34;t1&amp;#34;,)) t2=threading.Thread(target=p,args=(&amp;#34;t2&amp;#34;,))  t1.start() t2.start() output:
t1 t1 t1 t2 t2 t2 </description>
    </item>
    
    <item>
      <title>MVC Pattern in Python</title>
      <link>https://javabullshit.github.io/posts/mvc-pattern-in-python/</link>
      <pubDate>Sun, 13 Mar 2022 10:32:23 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/mvc-pattern-in-python/</guid>
      <description>MVC Example module:
class QuoteModel:  def get_quote(self, n): 	try: 	value = quote[n] 	except: 	value = &amp;#34;Not found!&amp;#34; 	return value view:
class QuoteTerminalController:  def show(self, quote): 	print(&amp;#34;&amp;#34;) 未完结</description>
    </item>
    
    <item>
      <title>Shell与Python合体</title>
      <link>https://javabullshit.github.io/posts/shell-python/</link>
      <pubDate>Sat, 12 Mar 2022 04:30:09 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/shell-python/</guid>
      <description>script=&amp;#34;for i in range(1,10): print(i)&amp;#34; python -c &amp;#34;&amp;#34;&amp;#34;$script&amp;#34;&amp;#34;&amp;#34; 带参数：
script=&amp;#34; import sys a=sys.argv for i in a: print(i) &amp;#34; python -c &amp;#34;&amp;#34;&amp;#34;$script&amp;#34;&amp;#34;&amp;#34; hello bash 运行结果：
-c hello bash </description>
    </item>
    
    <item>
      <title>github pages设置仓库子目录为网站根目录，静态博客修改默认渲染路径</title>
      <link>https://javabullshit.github.io/posts/set-docs-folder-as-root-dir/</link>
      <pubDate>Wed, 02 Mar 2022 23:33:06 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/set-docs-folder-as-root-dir/</guid>
      <description>昨天还在想静态博客部署的问题，源文件和生成的网页文件怎么处理，今天找到了方案。
好像很多用户都没有尝试过这个操作
在github pages里可以把子目录docs设置为网站根目录，这样子，一个repository就能同时存放源文件和网页文件而不用分支了😎
但是市面上的静态博客生成器默认输出路径都不是docs文件夹，所以需要把静态博客生成器的渲染路径修改为docs，然后就可以直接把整个静态博客推送到repository了，没有任何繁杂的操作！
修改渲染路径的方法 基本都是在配置文件里加入属性指定文件目录
 hugo: publishDir = dir jekyll: destination dir hexo: public_dir: &#39;dir&#39; pelican: OUTPUT_PATH = &#39;output/&#39;  </description>
    </item>
    
    <item>
      <title>Hugo笔记</title>
      <link>https://javabullshit.github.io/posts/hugo/</link>
      <pubDate>Wed, 02 Mar 2022 10:50:27 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/hugo/</guid>
      <description>文档 https://gohugo.io/documentation/
评论插件的选择 几个不错的评论插件:
 Valine: 传统的昵称、邮箱、网址式 utterances: github登录评论，配置起来最简单 gitalk: github登录评论，美观 disqus: 老外用的多，有收费功能  人生苦短，我用utterances  在github上创建一个公开的repository 在github上安装uterances app：https://github.com/apps/utterances，安装时选择刚才创建的repository 进入官网，填入刚才的repository，然后复制下面的代码填到hugo模板里的相对应位置，一般在是post.html里面找  &amp;lt;script src=&amp;#34;https://utteranc.es/client.js&amp;#34; repo=&amp;#34;javabullshit/comments&amp;#34;  issue-term=&amp;#34;pathname&amp;#34;  theme=&amp;#34;github-light&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34;  async&amp;gt; &amp;lt;/script&amp;gt; 编辑config.toml，加入以下内容：  [params.utteranc] enable = true repo = &amp;#34;javabullshit/comments&amp;#34; issueTerm = &amp;#34;pathname&amp;#34; 进入官网，
页内超链接新标签页打开 需要修改主题文件夹中的3个文件
 head.html post.html page.html  在&amp;lt;body&amp;gt;之前加入javascript代码：
&amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt; 	function addaTarget(id) { 	var aTags = document.getElementById(id).getElementsByTagName(&amp;#34;a&amp;#34;); 	for (i = 0; i &amp;lt; aTags.</description>
    </item>
    
    <item>
      <title>Gallery</title>
      <link>https://javabullshit.github.io/gallery/</link>
      <pubDate>Wed, 02 Mar 2022 09:07:28 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/gallery/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Git常用</title>
      <link>https://javabullshit.github.io/posts/git/</link>
      <pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/git/</guid>
      <description>初始化 # 以当前目录为项目创建仓库 git init  # 创建一个目录作为项目仓库 git init [name] 提交至暂存区 git add [file] git commit -m [msg] 分支 # 创建分支 git branch [name]  # 查看分支，-r：远程分支，-a：所有分支 git branch 参数  # 切换分支 git checkout 分支名  # 删除本地分支 git branch -d [BranchName]  # 删除远程分支 git push origin --delete [BranchName] 同步 # 添加远程仓库 git remote add [仓库] [仓库url]  # 同步 git push [仓库] [分支]  # 同步到本地 git pull [仓库] [分支] 其他 加上--global表示全局，不加就仅针对当前项目</description>
    </item>
    
    <item>
      <title>安装Termux后要做的</title>
      <link>https://javabullshit.github.io/posts/termux/</link>
      <pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/posts/termux/</guid>
      <description>键盘方案
extra-keys = [ \  [&amp;#39;ESC&amp;#39;,&amp;#39;|&amp;#39;,&amp;#39;/&amp;#39;,&amp;#39;F5&amp;#39;,&amp;#39;[&amp;#39;,&amp;#39;UP&amp;#39;,&amp;#39;]&amp;#39;,&amp;#39;`&amp;#39;,&amp;#39;{&amp;#39;,&amp;#39;&amp;lt;&amp;#39;], \  [&amp;#39;TAB&amp;#39;,&amp;#39;CTRL&amp;#39;,&amp;#39;=&amp;#39;,&amp;#39;ALT&amp;#39;,&amp;#39;LEFT&amp;#39;,&amp;#39;DOWN&amp;#39;,&amp;#39;RIGHT&amp;#39;,&amp;#39;PGDN&amp;#39;,&amp;#39;}&amp;#39;,&amp;#39;&amp;gt;&amp;#39;] \ ] zsh
sh -c &amp;#34;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;#34; 国内源
sed -i &amp;#39;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&amp;#39; $PREFIX/etc/apt/sources.list sed -i &amp;#39;s@^\(deb.*games stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&amp;#39; $PREFIX/etc/apt/sources.list.d/game.list sed -i &amp;#39;s@^\(deb.*science stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&amp;#39; $PREFIX/etc/apt/sources.list.d/science.list apt update &amp;amp;&amp;amp; apt upgrade 安装虚拟机
# ubuntu pkg install wget openssl-tool proot -y &amp;amp;&amp;amp; hash -r &amp;amp;&amp;amp; wget https://raw.githubusercontent.com/EXALAB/AnLinux-Resources/master/Scripts/Installer/Ubuntu/ubuntu.sh &amp;amp;&amp;amp; bash ubuntu.sh  # kali Linux pkg install wget openssl-tool proot -y &amp;amp;&amp;amp; hash -r &amp;amp;&amp;amp; wget https://raw.</description>
    </item>
    
    
    
    <item>
      <title>关于</title>
      <link>https://javabullshit.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/about/</guid>
      <description> 本站仅用于记录学习笔记。
 直到有一天我想起了我的这个github账号🤔
🚀Projects  Pihpi 一款Typecho主题  ✨Star  编程笔记本：一个无人知晓の小站( ╹▽╹ )  📖计划中的学习任务  Python  </description>
    </item>
    
    <item>
      <title>友链</title>
      <link>https://javabullshit.github.io/links/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://javabullshit.github.io/links/</guid>
      <description> Go博客: 不仅仅是Go语言，还有Hugo SerMsBlog: Ser-Ms国内地址 MrDjun: Java大佬 松岛川树: 许多人来来去去，相聚又别离 暗影: 暗影无际，暗夜无边 pai233の小窝: Write Down My Life. 虎山居: 一个分享学习和生活的地方 柯善康: 柯善康个人博客  ⭐本站信息 网站名: 编程笔记本 网址: https://javabullshit.github.io/ 描述: 一个无人访问的小站 Logo: https://javabullshit.github.io/images/ahri.jpg 加友链在下方留言，格式（使用英文标点符号）:
[网站名](网址): 网站描述 </description>
    </item>
    
  </channel>
</rss>
